---
kind: pipeline
type: docker
name: validate

steps:
  - name: prepare
    image: golang:1.19
    volumes:
      - name: go_cache
        path: /go
      - name: artifacts_cache
        path: ./artifacts
    commands:
      - export PATH=$${PATH}:/go/bin:/usr/local/go/bin
      - go install golang.org/x/tools/cmd/goimports@latest
      - curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.50.1
      - go install github.com/go-critic/go-critic/cmd/gocritic@latest
      - goimports
      - go mod tidy
      - go mod vendor

  - name: format
    image: golang:1.19
    volumes:
      - name: go_cache
        path: /go
      - name: artifacts_cache
        path: ./artifacts
    commands:
      - export PATH=$${PATH}:/go/bin:/usr/local/go/bin
      - go fmt
      - go vet
      - golangci-lint run
      - gocritic check

volumes:
  - name: go_cache
    host:
      path: /opt/docker/cache/promsaltexp_go
  - name: artifacts_cache
    host:
      path: /opt/docker/cache/promsaltexp_artifacts

---
kind: pipeline
type: docker
name: build

steps:
  - name: prepare
    image: golang:1.19
    volumes:
      - name: go_cache
        path: /go
      - name: artifacts_cache
        path: ./artifacts
    commands:
      - go install github.com/prometheus/promu@latest

  - name: build
    image: golang:1.19
    volumes:
      - name: go_cache
        path: /go
      - name: artifacts_cache
        path: ./artifacts
    commands:
      - export PATH=$${PATH}:/go/bin:/usr/local/go/bin
      - make build

  - name: release-tarball
    image: golang:1.19
    volumes:
      - name: go_cache
        path: /go
      - name: artifacts_cache
        path: ./artifacts
    commands:
      - export PATH=$${PATH}:/go/bin:/usr/local/go/bin
      - make tarball
    when:
      event: tag

  - name: release-deb
    image: fpm
    volumes:
      - name: artifacts_cache
        path: ./artifacts
    commands:
      - make build-deb
    when:
      event: tag

  - name: release-rpm
    image: fpm
    volumes:
      - name: artifacts_cache
        path: ./artifacts
    commands:
      - make build-rpm
    when:
      event: tag

  - name: publish
    image: plugins/github-release
    volumes:
      - name: artifacts_cache
        path: ./artifacts
    settings:
      api_key:
        from_secret:  drone_github_publish_release
      files: artifacts/prometheus-saltstack-exporter-*
      file_exists: overwrite
      checksum: sha256
      draft: false
      prerelease: false
    when:
      event: tag

depends_on:
  - validate

volumes:
  - name: go_cache
    host:
      path: /opt/docker/cache/promsaltexp_go
  - name: artifacts_cache
    host:
      path: /opt/docker/cache/promsaltexp_artifacts

---
kind: pipeline
name: notify
type: docker

trigger:
  status:
    - success
    - failure

steps:
  - name: slack
    image: plugins/slack
    settings:
      webhook:
        from_secret: slack_webhook
    when:
      status:
        - failure
        - success

depends_on:
  - validate
  - build
---
kind: signature
hmac: ef483e1abb700c6c6d36e5fbdf4f898835a7994a73bbdef4a6bbf3623c2641b4

...
